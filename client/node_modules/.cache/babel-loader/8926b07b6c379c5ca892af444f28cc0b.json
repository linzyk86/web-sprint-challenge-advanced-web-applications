{"ast":null,"code":"var _jsxFileName = \"/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js\";\nimport React, { useState } from \"react\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport { useHistory, useParams } from \"react-router-dom\";\nconst initialColor = {\n  color: \"\",\n  code: {\n    hex: \"\"\n  }\n};\n\nconst ColorList = ({\n  colors,\n  updateColors\n}) => {\n  console.log(colors);\n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n  const {\n    id\n  } = useParams();\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n  const saveEdit = e => {\n    e.preventDefault(); // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth().put(`/colors/${colorToEdit.id}`, colorToEdit).then(res => {\n      // res.data\n      setColorToEdit(res.data); // push(`/item-list/${id}`);\n    }).catch(err => console.log(err));\n  };\n\n  const deleteColor = color => {// make a delete request to delete this color\n  };\n\n  return React.createElement(\"div\", {\n    className: \"colors-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"colors\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, colors.map(color => React.createElement(\"li\", {\n    key: color.color,\n    onClick: () => editColor(color),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"delete\",\n    onClick: e => {\n      e.stopPropagation();\n      deleteColor(color);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"x\"), \" \", color.color), React.createElement(\"div\", {\n    className: \"color-box\",\n    style: {\n      backgroundColor: color.code.hex\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })))), editing && React.createElement(\"form\", {\n    onSubmit: saveEdit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"edit color\"), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"color name:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      color: e.target.value\n    }),\n    value: colorToEdit.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"hex code:\", React.createElement(\"input\", {\n    onChange: e => setColorToEdit({ ...colorToEdit,\n      code: {\n        hex: e.target.value\n      }\n    }),\n    value: colorToEdit.code.hex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"button-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onCLick: () => saveEdit,\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"save\"), React.createElement(\"button\", {\n    onClick: () => setEditing(false),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"cancel\"))), React.createElement(\"div\", {\n    className: \"spacer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n};\n\nexport default ColorList;","map":{"version":3,"sources":["/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/ColorList.js"],"names":["React","useState","axiosWithAuth","useHistory","useParams","initialColor","color","code","hex","ColorList","colors","updateColors","console","log","editing","setEditing","colorToEdit","setColorToEdit","id","editColor","saveEdit","e","preventDefault","put","then","res","data","catch","err","deleteColor","map","stopPropagation","backgroundColor","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axiosWithAuth from \"../utils/axiosWithAuth\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\n\n\nconst initialColor = {\n  color: \"\",\n  code: { hex: \"\" }\n};\n\n\nconst ColorList = ({ colors, updateColors }) => {\n  console.log(colors);\n  \n  const [editing, setEditing] = useState(false);\n  const [colorToEdit, setColorToEdit] = useState(initialColor);\n    const {id} = useParams();\n\n\n  const editColor = color => {\n    setEditing(true);\n    setColorToEdit(color);\n  };\n\n \n\n  const saveEdit = (e) => {\n    e.preventDefault();\n\n    // Make a put request to save your updated color\n    // think about where will you get the id from...\n    // where is is saved right now?\n\n    axiosWithAuth()\n      .put(`/colors/${colorToEdit.id}`, colorToEdit)\n      .then(res => {\n        // res.data\n        setColorToEdit(res.data);\n        // push(`/item-list/${id}`);\n      })\n      .catch(err => console.log(err));\n  };\n  \n\n  const deleteColor = color => {\n    // make a delete request to delete this color\n  };\n\n  return (\n    <div className=\"colors-wrap\">\n      <p>colors</p>\n      <ul>\n        {colors.map(color => (\n          <li key={color.color} onClick={() => editColor(color)}>\n            <span>\n              <span className=\"delete\" onClick={e => {\n                    e.stopPropagation();\n                    deleteColor(color)\n                  }\n                }>\n                  x\n              </span>{\" \"}\n              {color.color}\n            </span>\n            <div\n              className=\"color-box\"\n              style={{ backgroundColor: color.code.hex }}\n            />\n          </li>\n        ))}\n      </ul>\n      {editing && (\n        <form onSubmit={saveEdit}>\n          <legend>edit color</legend>\n          <label>\n            color name:\n            <input\n              onChange={e =>\n                setColorToEdit({ ...colorToEdit, color: e.target.value })\n              }\n              value={colorToEdit.color}\n            />\n          </label>\n          <label>\n            hex code:\n            <input\n              onChange={e =>\n                setColorToEdit({\n                  ...colorToEdit,\n                  code: { hex: e.target.value }\n                })\n              }\n              value={colorToEdit.code.hex}\n            />\n          </label>\n          <div className=\"button-row\">\n            <button onCLick={()=> saveEdit }type=\"submit\">save</button>\n            <button onClick={() => setEditing(false)}>cancel</button>\n          </div>\n        </form>\n      )}\n      <div className=\"spacer\" />\n      {/* stretch - build another form here to add a color */}\n    </div>\n  );\n};\n\nexport default ColorList;\n"]},"metadata":{},"sourceType":"module"}