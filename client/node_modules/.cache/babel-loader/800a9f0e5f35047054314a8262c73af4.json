{"ast":null,"code":"var _jsxFileName = \"/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js\";\nimport React, { useState } from \"react\";\nimport axios from 'axios';\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({\n    username: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    setCredentials({ ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const login = e => {\n    e.preventDefault(); // make a post request to the login endpoint on the server\n\n    axios.post('http://localhost:5000/api/login', credentials).then(res => {\n      console.log(res.data);\n      localStorage.setItem('token', res.data.payload); // redirect the user to the app's main logged in page\n\n      this.props.history.push('/protected');\n    }).catch(err => console.log({\n      err\n    }));\n  }; // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: login,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    id: \"username\",\n    placeholder: \"Username\",\n    value: credentials.username,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    type: \"text\",\n    name: \"password\",\n    id: \"password\",\n    placeholder: \"Password\",\n    value: credentials.password,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Login\")));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/lindsaywhite/Desktop/Lambda/web-sprint-challenge-advanced-web-applications/client/src/components/Login.js"],"names":["React","useState","axios","Login","credentials","setCredentials","username","password","handleChange","e","target","name","value","login","preventDefault","post","then","res","console","log","data","localStorage","setItem","payload","props","history","push","catch","err"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCJ,QAAQ,CAAC;AAC7CK,IAAAA,QAAQ,EAAC,EADoC;AAE7CC,IAAAA,QAAQ,EAAC;AAFoC,GAAD,CAA9C;;AAKA,QAAMC,YAAY,GAAGC,CAAC,IAAE;AACtBJ,IAAAA,cAAc,CAAC,EACb,GAAGD,WADU;AACE,OAACK,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAD5B,KAAD,CAAd;AAGD,GAJD;;AAMA,QAAMC,KAAK,GAAGJ,CAAC,IAAI;AACbA,IAAAA,CAAC,CAACK,cAAF,GADa,CAEb;;AACAZ,IAAAA,KAAK,CACAa,IADL,CACU,iCADV,EAC6CX,WAD7C,EAEKY,IAFL,CAEUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BL,GAAG,CAACG,IAAJ,CAASG,OAAvC,EAFS,CAGT;;AACA,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACH,KAPL,EAQKC,KARL,CAQWC,GAAG,IAAIV,OAAO,CAACC,GAAR,CAAY;AAAES,MAAAA;AAAF,KAAZ,CARlB;AASH,GAZH,CAZkB,CAyBlB;AACA;;;AACA,SACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,QAAQ,EAAIf,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,KAAK,EAAIT,WAAW,CAACE,QALzB;AAMI,IAAA,QAAQ,EAAKE,YANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EASI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,IAAI,EAAC,UAFT;AAGI,IAAA,EAAE,EAAC,UAHP;AAII,IAAA,WAAW,EAAC,UAJhB;AAKI,IAAA,KAAK,EAAIJ,WAAW,CAACG,QALzB;AAMI,IAAA,QAAQ,EAAIC,YANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAlBJ,CADJ,CADV;AAwBD,CAnDD;;AAqDA,eAAeL,KAAf","sourcesContent":["import React, {useState} from \"react\";\nimport axios from 'axios';\n\n\nconst Login = () => {\n  const [credentials, setCredentials] = useState({\n    username:'',\n    password:''\n  })\n  \n  const handleChange = e=>{\n    setCredentials({\n      ...credentials,[e.target.name]: e.target.value\n    })\n  }\n\n  const login = e => {\n        e.preventDefault();\n        // make a post request to the login endpoint on the server\n        axios\n            .post('http://localhost:5000/api/login', credentials)\n            .then(res => {\n                console.log(res.data);\n                localStorage.setItem('token', res.data.payload);\n                // redirect the user to the app's main logged in page\n                this.props.history.push('/protected');\n            })\n            .catch(err => console.log({ err }));\n    };\n  // make a post request to retrieve a token from the api\n  // when you have handled the token, navigate to the BubblePage route\n  return (\n            <div>\n                <form onSubmit = {login}>\n                    <input\n                        type='text'\n                        name='username'\n                        id='username'\n                        placeholder='Username'\n                        value = {credentials.username}\n                        onChange = { handleChange}\n                    />\n                    <input\n                        type='text'\n                        name='password'\n                        id='password'\n                        placeholder='Password'\n                        value = {credentials.password}\n                        onChange = {handleChange}\n\n                    />\n                    <button>Login</button>\n                </form>\n            </div>\n        );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}